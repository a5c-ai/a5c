name: Release

on:
  push:
    branches:
      - a5c/main
      - main

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
      - name: Install
        run: |
          if [ -f package-lock.json ]; then 
            echo "Attempting clean install via npm ci..."
            if ! npm ci; then
              echo "npm ci failed (likely lockfile mismatch). Falling back to npm install to update lockfile..."
              npm install
            fi
          else 
            npm install
          fi
      - name: Build
        run: npm run -s build
      - name: Release (a5c/main prerelease)
        if: github.ref == 'refs/heads/a5c/main'
        env:
          GITHUB_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          HUSKY: 0
        run: npx semantic-release
      - name: Release (main stable)
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          HUSKY: 0
        run: npx semantic-release
      - name: Setup Node.js for npmjs (main only)
        if: github.ref == 'refs/heads/main'
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
      - name: Publish to npmjs (main only)
        if: github.ref == 'refs/heads/main'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          # Ensure dist exists (semantic-release should have built during build step)
          test -d dist || { echo "dist missing"; exit 1; }
          # Read version from package.json
          VERSION=$(node -p "require('./package.json').version")
          NAME=$(node -p "require('./package.json').name")
          echo "Attempt publish ${NAME}@${VERSION} to registry.npmjs.org"
          # Check if already published on npmjs
          if npm view "${NAME}@${VERSION}" version --registry=https://registry.npmjs.org > /dev/null 2>&1; then
            echo "Version already exists on npmjs, skipping publish."
            exit 0
          fi
          # Publish to npmjs overriding package publishConfig registry
          npm publish --registry=https://registry.npmjs.org --access public
