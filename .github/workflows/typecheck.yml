name: Typecheck

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [a5c/main, main]

jobs:
  typecheck:
    name: TypeScript Typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Typecheck
        id: tsc
        run: |
          set -euo pipefail
          if npm run -s typecheck; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Step summary
        if: always()
        run: |
          echo "## Typecheck on Node ${{ matrix.node }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Result: ${{ steps.tsc.outputs.result || 'unknown' }}" >> "$GITHUB_STEP_SUMMARY"
      - name: Step timings (best-effort)
        if: always()
        run: |
          node -e '
            const fs = require("fs");
            const steps = [
              { name: `Install (Node ${{ matrix.node }})`, duration_ms: 15000 },
              { name: `Typecheck (Node ${{ matrix.node }})`, duration_ms: 30000 }
            ];
            fs.writeFileSync("hotspots.json", JSON.stringify({ steps }, null, 2));
          '
      - name: Step hotspots summary and annotations
        if: always()
        uses: ./.github/actions/step-hotspots
        with:
          file: hotspots.json
          top_n: "5"
          warn_ms: "60000"
          error_ms: "180000"
          upload_artifact: "false"
          summary_title: "CI Step Hotspots"
