name: Gitleaks

on:
  pull_request:
    branches: [a5c/main, main]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [a5c/main, main]

concurrency:
  group: gitleaks-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    env:
      # Expose license (if configured) to steps and conditions via env context
      GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Prefer official Gitleaks action when a license is available
      - name: Run Gitleaks (fast PR scan)
        if: github.event_name == 'pull_request' && env.GITLEAKS_LICENSE != ''
        uses: gitleaks/gitleaks-action@v2
        with:
          # Fast, workspace-only scan for PRs to reduce noise and time
          args: "detect --no-git --redact --config-path gitleaks.toml --report-format sarif --report-path gitleaks.sarif"

      - name: Run Gitleaks (push scan)
        if: github.event_name == 'push' && env.GITLEAKS_LICENSE != ''
        uses: gitleaks/gitleaks-action@v2
        with:
          # Full scan against repo history on protected branches
          args: "detect --redact --config-path gitleaks.toml --report-format sarif --report-path gitleaks.sarif"

      # Fallback to TruffleHog when no Gitleaks license is configured
      - name: Run TruffleHog (fast PR scan fallback)
        if: github.event_name == 'pull_request' && env.GITLEAKS_LICENSE == ''
        run: |
          echo "Running TruffleHog fallback: PR workspace scan"
          docker run --rm -v "$PWD:/pwd" trufflesecurity/trufflehog:latest filesystem \
            --directory=/pwd \
            --no-update \
            --only-verified \
            --fail

      - name: Run TruffleHog (push scan fallback)
        if: github.event_name == 'push' && env.GITLEAKS_LICENSE == ''
        run: |
          echo "Running TruffleHog fallback: full repository filesystem scan"
          docker run --rm -v "$PWD:/pwd" trufflesecurity/trufflehog:latest filesystem \
            --directory=/pwd \
            --no-update \
            --fail

      - name: Upload SARIF results
        if: always() && hashFiles('gitleaks.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
