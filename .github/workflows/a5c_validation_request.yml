name: Validation Request

on:
  repository_dispatch:
    types: [validation_request]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: read

jobs:
  test-npx:
    name: Install and run via npx
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Show event context
        run: |
          echo "Event path: $GITHUB_EVENT_PATH"
          jq -r '.action // .event_type // .type // "?"' "$GITHUB_EVENT_PATH" || true
      - name: Setup Node
        uses: actions/setup-node@v4
        # with:
        # node-version-file: .nvmrc
        # Avoid setting global registry to GPR; use project .npmrc scoping instead
      - name: Configure npm auth (env)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          # Create a project-level npmrc and point npm to use it for all subsequent steps
          echo "registry=https://registry.npmjs.org" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
          echo "@a5c-ai:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "always-auth=true" >> .npmrc
          export NPM_CONFIG_USERCONFIG="$PWD/.npmrc"
          echo "NPM_CONFIG_USERCONFIG=$NPM_CONFIG_USERCONFIG" >> "$GITHUB_ENV"
          npm whoami || true
      - name: Run npx package help
        env:
          NODE_AUTH_TOKEN: ${{ secrets.A5C_AGENT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_CONFIG_USERCONFIG: ${{ env.NPM_CONFIG_USERCONFIG }}
        run: |
          set -euo pipefail
          # Prefer dev channel on a5c/main; fallback to latest if not found
          PKG_SPEC="@a5c-ai/events@a5c-main"
          if npx -y "$PKG_SPEC" --help >/dev/null 2>&1; then
            echo "Resolved package: $PKG_SPEC"
          else
            PKG_SPEC="@a5c-ai/events@latest"
            echo "Fallback package: $PKG_SPEC"
            npx -y "$PKG_SPEC" --help >/dev/null
          fi
          echo "A5C_PKG_SPEC=$PKG_SPEC" >> "$GITHUB_ENV"

      - name: Generate Context - render
        env:
          A5C_AGENT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx -y "$A5C_PKG_SPEC" generate_context \
            --in out.enrich.json \
            --template github://a5c-ai/events/branch/a5c%2Fmain/.a5c/main.md \
            --out prompt.md
          head -n 50 prompt.md

      - name: Upload npx smoke artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-npx-test-artifacts
          path: |
            out.normalize.json
            out.enrich.json
            out.reactor.json
            prompt.md
