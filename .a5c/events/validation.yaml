---
name: Validation Request
metadata:
  runner-name: reactor
on:
  any:
    filters:
      - expression: ${{ env.A5C_GLOBAL_HANDLER == 'true' }}
    skip:
      - expression: ${{ event.labels | contains('a5c') == false }}
script:
  - |
    echo "Global handler for 'any' for events containing 'a5c' label"
---
name: Validation Request In Progress Warning
metadata:
  runner-name: reactor
on:
  any:
    filters:
      - expression: ${{ env.VALIDATION_REQUEST_IN_PROGRESS_WARNING == 'true' && event.type == 'synchronize' && event.labels | contains('validation') }}

script:
  - |
    echo "PR branch changed while validation is in progress - ${{ event.pull_request.html_url }}"
---
name: Validate PRs by validation label
metadata:
  runner-name: reactor
on:
  pull_request:
    filters:
      # PR is ready for review, opened, reopened
      - expression: ${{ (event.type == 'opened' || event.type == 'reopened' || event.type == 'ready_for_review') && event.pull_request.labels | map(attribute='name') | contains('validation') == false }}
      # validation label was added
      - expression: ${{ event.type == 'labeled' && event.label.name == 'validation' }}
    skip:
      # validation enabled in this repo on the a5c/main / .a5c/config.yml
      - expression: ${{ read_github_content(event.repository.html_url, "a5c/main", '.a5c/config.yml') | load_yaml | select('triggers.validation.enabled') != 'true' }}
      # is a draft PR or already merged
      - expression: ${{ event.pull_request.draft == true || event.pull_request.merged == true }}
      # if validation in progress or already requested
      - expression: ${{ event.pull_request.labels | map(attribute='name') | contains('validation_in_progress') || event.pull_request.labels | map(attribute='name') | contains('validation_requested') }}
emit:
  validation_request:
    type: pr_ready
    payload:
      original_event: ${{ event }}
      pr_ref: ${{ event.pull_request.head.ref }}
      base_ref: ${{ event.pull_request.base.ref }}
      pull_request: ${{ event.pull_request }}
set_labels:
  - entity: ${{ event.pull_request.html_url }}
    add_labels: [validation_requested]
    remove_labels: [validated]
script:
  - |
    echo "Validation request for PR ${{ event.pull_request.html_url }} added label validation"
---
name: Validation Agent Run
metadata:
  runner-name: agents
on:
  validation_request:
pre_set_labels:
  - entity: ${{ event.pull_request.html_url }}
    add_labels: [validation_in_progress]
    remove_labels: [validation_requested]
status-checks:
  - name: Validation/{{ event.type }}
    # sets state in queued / running before running script, and state: success/failure after (depending on the script shell return value)
    description: Validation of PR ({{ event.pull_request.title }})
    pull_request_url: ${{ event.pull_request.html_url }}
agent_run:
  envs:
    - name: SOME_ENV
      value: some_value
set_labels:
  - entity: ${{ event.pull_request.html_url }}
    add_labels: [validated]
    remove_labels: [validation_in_progress]
