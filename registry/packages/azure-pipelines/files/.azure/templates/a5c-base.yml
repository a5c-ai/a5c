parameters:
  - name: jobName
    type: string
  - name: displayName
    type: string
  - name: condition
    type: string
    default: 'always()'
  - name: runnerName
    type: string
    default: reactor

jobs:
  - job: ${{ parameters.jobName }}
    displayName: ${{ parameters.displayName }}
    condition: ${{ parameters.condition }}
    pool:
      vmImage: ubuntu-latest
    variables:
      RUNNER_NAME: ${{ parameters.runnerName }}
      A5C_CLI_PROFILE: ${{ coalesce(variables.A5C_CLI_PROFILE, 'azure_codex_gpt5') }}
      A5C_MCPS_PATH: ${{ coalesce(variables.A5C_MCPS_PATH, '.a5c/mcps.json') }}
      A5C_EVENT_PATH: ${{ coalesce(variables.A5C_EVENT_PATH, '.a5c/events') }}
      A5C_TEMPLATE_URI: ${{ coalesce(variables.A5C_TEMPLATE_URI, '.a5c/templates/default.md') }}
      A5C_CLOUD_SETUP: ${{ coalesce(variables.A5C_CLOUD_SETUP, 'false') }}
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
      - script: |
          npm install --global @a5c/cli@latest
        displayName: Install a5c CLI
      - script: |
          set -e
          if [ ! -d "${A5C_EVENT_PATH}" ]; then
            echo "no .a5c directory; skipping"
            exit 0
          fi
          npx -y @a5c/cli generate_context --in "${A5C_EVENT_PATH}" --template "${A5C_TEMPLATE_URI}" --out /tmp/prompt.md
          npx -y @a5c/cli run --in /tmp/prompt.md --out /tmp/last_message.txt --profile "${A5C_CLI_PROFILE}" --mcps "${A5C_MCPS_PATH}" \
            | tee /tmp/full_output.txt | npx -y @a5c/cli parse --type codex --out /tmp/parsed-codex.jsonl --pretty
        displayName: Run reactor
        env:
          A5C_AGENT_GITHUB_TOKEN: $(A5C_AGENT_GITHUB_TOKEN)
          GITHUB_TOKEN: $(A5C_AGENT_GITHUB_TOKEN)
          AZURE_DEVOPS_EXT_PAT: $(AZURE_DEVOPS_EXT_PAT)
      - publish: /tmp/full_output.txt
        artifact: a5c-full-output
        condition: succeededOrFailed()
      - publish: /tmp/parsed-codex.jsonl
        artifact: a5c-parsed
        condition: succeededOrFailed()
      - publish: /tmp/last_message.txt
        artifact: a5c-last-message
        condition: succeededOrFailed()
