name: Issue implementation via slash command
metadata:
  runner-name: reactor
on:
  issue_comment:
    filters:
      - expression: ${{ event.enriched.slash_commands | map(command) | contains('issue-implement') }}
    skip:
      # is already closed
      - expression: ${{ event.issue.closed == true }}
emit:
  issue_implementation_requested:
    type: issue_implementation
    payload:
      issue: ${{ event.issue }}
---
name: Issue implementation via label or slash command
metadata:
  runner-name: reactor
on:
  issue:
    filters:
      # issue implementation label or slash command was used
      - expression: ${{ event.type == 'labeled' && event.label.name == 'issue_implementation' }}
      - expression: ${{ event.enriched.slash_commands | map(command) | contains('issue-implement') }}
    skip:
      # is already closed
      - expression: ${{ event.issue.closed == true }}
emit:
  issue_implementation_requested:
    type: issue_implementation
    payload:
      original_event: ${{ event }}
      issue: ${{ event.issue }}
actions:
  - type: label_issue
    params:
      issue: ${{ event.issue.html_url }}
      add_labels: [issue_implementation_queued]
      remove_labels: [issue_implementation_completed]
---
name: Issue implementation agent run
metadata:
  runner-name: agents
on:
  issue_implementation_requested:
actions:
  - type: label_issue
    params:
      issue: ${{ event.issue.html_url }}
      add_labels: [issue_implementation_in_progress]
      remove_labels: [issue_implementation_queued]
  - type: agent_run
    params: {}
    env:
      - name: SOME_ENV
        value: some_value
  - type: label_issue
    params:
      issue: ${{ event.issue.html_url }}
      add_labels: [issue_implementation_completed]
      remove_labels: [issue_implementation_in_progress]
